// File generated by Jules. Do not edit.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members

// ##################################################################################
// #                          IMPORTANT SECURITY WARNING                            #
// ##################################################################################
// #                                                                                #
// #  This file contains sensitive API keys. DO NOT commit this file to a public    #
// #  repository. It is highly recommended to use a proper secrets management       #
// #  solution or to use the FlutterFire CLI to generate this file, which should    #
// #  then be added to your .gitignore file.                                        #
// #                                                                                #
// #  This file was generated manually as a workaround and is not ideal for         #
// #  production environments.                                                      #
// #                                                                                #
// ##################################################################################

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default `FirebaseOptions` for use with `Firebase.initializeApp`.
///
/// These options were generated manually using the credentials provided.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBhUxLsSWkXUppYnp8mXxSOCcrtFnRvBLw',
    appId: '1:1068949076400:ios:e4b428768755d55b2dfe75',
    messagingSenderId: '1068949076400',
    projectId: 'merchant-91b0e',
    databaseURL: 'https://merchant-91b0e.firebaseio.com',
    storageBucket: 'merchant-91b0e.appspot.com',
    iosBundleId: 'com.example.bugfix',
  );

  // DUMMY ANDROID CONFIGURATION TO PREVENT CRASHES
  // TODO: Replace with your actual Android Firebase configuration
  // by running `flutterfire configure`.
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'dummy-api-key-for-android', // Replace with your key
    appId: '1:1068949076400:android:dummy-app-id', // Replace with your app ID
    messagingSenderId: '1068949076400',
    projectId: 'merchant-91b0e',
    storageBucket: 'merchant-91b0e.appspot.com',
  );
}